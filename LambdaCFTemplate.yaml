AWSTemplateFormatVersion: 2010-09-09

Parameters:
 LambdaFunctionName:
   Default: appsync-lambda-example
   Description: Name of the AWS Lambda Function.
   Type: String
   MinLength: 1
   MaxLength: 28
   AllowedPattern: '^[a-z][a-z0-9-]*$'

Resources:

 ############################
 # AWS IAM Roles & Policies #
 ############################

 LambdaExecutionRole:
     Type: AWS::IAM::Role
     Properties:
       AssumeRolePolicyDocument:
         Version: '2012-10-17'
         Statement:
         - Effect: Allow
           Principal:
             Service:
             - lambda.amazonaws.com
           Action:
           - sts:AssumeRole
       Path: "/"
       Policies:
       - PolicyName: LambdaExecutionRoleLogAccess
         PolicyDocument:
           Version: '2012-10-17'
           Statement:
           - Effect: Allow
             Action:
             - logs:*
             Resource: arn:aws:logs:*:*:*
 AppSyncServiceRole:
     Type: AWS::IAM::Role
     Properties:
       AssumeRolePolicyDocument:
         Version: '2012-10-17'
         Statement:
         - Effect: Allow
           Principal:
             Service:
             - deepdish.amazonaws.com
           Action:
           - sts:AssumeRole
 AppSyncLambdaInvokePolicy:
     Type: AWS::IAM::Policy
     Properties:
       PolicyName: AppSyncLambdaInvokePolicy
       PolicyDocument:
         Version: '2012-10-17'
         Statement:
         - Effect: Allow
           Action:
           - lambda:*
           Resource: "*"
       Roles:
       - !Ref AppSyncServiceRole

 #################
 # AWS Resources #
 #################

 LambdaFunction:
     Type: AWS::Lambda::Function
     Properties:
       FunctionName: !Ref LambdaFunctionName
       Handler: index.handler
       Runtime: nodejs6.10
       Role: !GetAtt LambdaExecutionRole.Arn
       Code:
         ZipFile: !Sub |
           exports.handler = (event, context, callback) => {
             var id = event.arguments.id;
             var equipments = {
                 0: { id: 0, name: "Heating" },
                 1: { id: 1, name: "Ventilation" },
                 2: { id: 2, name: "Lights" },
                 3: { id: 3, name: "Garage gate" },
                 4: { id: 4, name: "Electric" }
             }
             switch(event.field) {
                 case "getEquipment":
                   callback(null, equipments[id]);
                   break
               default:
                   callback("Unknown field, unable to resolve" + event.field, null);
                   break;
             }
           };

Outputs:
 LambdaFunctionArn:
   Description: The AWS Lambda Function ARN.
   Value: !GetAtt LambdaFunction.Arn
 LambdaAppSyncServiceRole:
   Description: The AppSync service role created with permissions to AWS Lambda operations.
   Value: !GetAtt AppSyncServiceRole.Arn
